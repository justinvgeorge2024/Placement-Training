DATA STRUCTURES
---
Stack -> linear->Array -> access for userdefined memory range
DMA -> Dynamic Array -> Increase size of array
                     -> Delete only complete array ( cannot shrink the array, cannot delete specific values)
So, to overcome this, we use dynamic memory.
----

Dynamic -> Linked List

-> but searching a linked list can be time consuming... (for the end values)

So we use Tree data structure.
_but when it came to shifting values/connectivity, tree is time consuming.
_ Then Graph is introduced.
---
pointer size => 8Byte
max accessible arrays -> 10^6  ~ 4GB of data  (using 8 byte pointer)
---
Dynamic memory llocation-- basically accessing the Heap memory.
... for that use "stdlib" library
-> malloc() ,realloc(), calloc(), free() -> mostly used functions for Dynamic Memory Aloocation 
---
q1.c-q6
---
LINKED LIST
---
nodes
---- QUESTIONS;
-> ask basic questions.
implement a linked list/doubly linked list and print the values/even node values and such basic things.
-> at times,, given an i/o of numbers (not size) and then end it with a -1. sinces size id not given, use linked list.
----
CREATION,INSERTION,DELETION,SEARCHING,SORTING